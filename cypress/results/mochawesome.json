{
  "stats": {
    "suites": 1,
    "tests": 14,
    "passes": 14,
    "pending": 0,
    "failures": 0,
    "start": "2023-09-12T19:16:24.165Z",
    "end": "2023-09-12T19:16:39.776Z",
    "duration": 15611,
    "testsRegistered": 14,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f88ba0b4-0eee-448d-b317-c5284e862b7a",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/actions.cy.ts",
      "file": "cypress/e2e/2-advanced-examples/actions.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "76bcb551-9a08-4370-9ecf-23f1c318ada5",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".type() - type into a DOM element",
              "fullTitle": "Actions .type() - type into a DOM element",
              "timedOut": null,
              "duration": 4221,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/type\ncy.get('.action-email')\n    .type('fake@email.com').should('have.value', 'fake@email.com')\n    // .type() with special character sequences\n    .type('{leftarrow}{rightarrow}{uparrow}{downarrow}')\n    .type('{del}{selectall}{backspace}')\n    // .type() with key modifiers\n    .type('{alt}{option}') //these are equivalent\n    .type('{ctrl}{control}') //these are equivalent\n    .type('{meta}{command}{cmd}') //these are equivalent\n    .type('{shift}')\n    // Delay each keypress by 0.1 sec\n    .type('slow.typing@email.com', { delay: 100 })\n    .should('have.value', 'slow.typing@email.com');\ncy.get('.action-disabled')\n    // Ignore error checking prior to type\n    // like whether the input is visible or disabled\n    .type('disabled error checking', { force: true })\n    .should('have.value', 'disabled error checking');",
              "err": {},
              "uuid": "e7d447ad-6e06-4789-af97-fbfb85c3185c",
              "parentUUID": "76bcb551-9a08-4370-9ecf-23f1c318ada5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".focus() - focus on a DOM element",
              "fullTitle": "Actions .focus() - focus on a DOM element",
              "timedOut": null,
              "duration": 249,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focus\ncy.get('.action-focus').focus()\n    .should('have.class', 'focus')\n    .prev().should('have.attr', 'style', 'color: orange;');",
              "err": {},
              "uuid": "5fbbffe5-f381-4fbf-a941-e8de2bb60dbe",
              "parentUUID": "76bcb551-9a08-4370-9ecf-23f1c318ada5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".blur() - blur off a DOM element",
              "fullTitle": "Actions .blur() - blur off a DOM element",
              "timedOut": null,
              "duration": 470,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blur\ncy.get('.action-blur').type('About to blur').blur()\n    .should('have.class', 'error')\n    .prev().should('have.attr', 'style', 'color: red;');",
              "err": {},
              "uuid": "c5dee2db-2d76-43d8-a6ef-950c74ba196a",
              "parentUUID": "76bcb551-9a08-4370-9ecf-23f1c318ada5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".clear() - clears an input or textarea element",
              "fullTitle": "Actions .clear() - clears an input or textarea element",
              "timedOut": null,
              "duration": 611,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clear\ncy.get('.action-clear').type('Clear this text')\n    .should('have.value', 'Clear this text')\n    .clear()\n    .should('have.value', '');",
              "err": {},
              "uuid": "6eff6e4b-8777-4d29-8053-7c1276d61915",
              "parentUUID": "76bcb551-9a08-4370-9ecf-23f1c318ada5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".submit() - submit a form",
              "fullTitle": "Actions .submit() - submit a form",
              "timedOut": null,
              "duration": 467,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/submit\ncy.get('.action-form')\n    .find('[type=\"text\"]').type('HALFOFF');\ncy.get('.action-form').submit()\n    .next().should('contain', 'Your form has been submitted!');",
              "err": {},
              "uuid": "49c86799-6d64-4d45-a5e1-f335a61e9719",
              "parentUUID": "76bcb551-9a08-4370-9ecf-23f1c318ada5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".click() - click on a DOM element",
              "fullTitle": "Actions .click() - click on a DOM element",
              "timedOut": null,
              "duration": 2195,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/click\ncy.get('.action-btn').click();\n// You can click on 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// clicking in the center of the element is the default\ncy.get('#action-canvas').click();\ncy.get('#action-canvas').click('topLeft');\ncy.get('#action-canvas').click('top');\ncy.get('#action-canvas').click('topRight');\ncy.get('#action-canvas').click('left');\ncy.get('#action-canvas').click('right');\ncy.get('#action-canvas').click('bottomLeft');\ncy.get('#action-canvas').click('bottom');\ncy.get('#action-canvas').click('bottomRight');\n// .click() accepts an x and y coordinate\n// that controls where the click occurs :)\ncy.get('#action-canvas')\n    .click(80, 75) // click 80px on x coord and 75px on y coord\n    .click(170, 75)\n    .click(80, 165)\n    .click(100, 185)\n    .click(125, 190)\n    .click(150, 185)\n    .click(170, 165);\n// click multiple elements by passing multiple: true\ncy.get('.action-labels>.label').click({ multiple: true });\n// Ignore error checking prior to clicking\ncy.get('.action-opacity>.btn').click({ force: true });",
              "err": {},
              "uuid": "5bbae325-5c67-4d02-8b03-b627cf2ab24a",
              "parentUUID": "76bcb551-9a08-4370-9ecf-23f1c318ada5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".dblclick() - double click on a DOM element",
              "fullTitle": "Actions .dblclick() - double click on a DOM element",
              "timedOut": null,
              "duration": 278,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/dblclick\n// Our app has a listener on 'dblclick' event in our 'scripts.js'\n// that hides the div and shows an input on double click\ncy.get('.action-div').dblclick().should('not.be.visible');\ncy.get('.action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "aa365a89-3b15-47c7-b90c-fc2f57958ece",
              "parentUUID": "76bcb551-9a08-4370-9ecf-23f1c318ada5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".rightclick() - right click on a DOM element",
              "fullTitle": "Actions .rightclick() - right click on a DOM element",
              "timedOut": null,
              "duration": 354,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/rightclick\n// Our app has a listener on 'contextmenu' event in our 'scripts.js'\n// that hides the div and shows an input on right click\ncy.get('.rightclick-action-div').rightclick().should('not.be.visible');\ncy.get('.rightclick-action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "0cee217a-38da-40c5-b15d-c37bb49e31cf",
              "parentUUID": "76bcb551-9a08-4370-9ecf-23f1c318ada5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".check() - check a checkbox or radio element",
              "fullTitle": "Actions .check() - check a checkbox or radio element",
              "timedOut": null,
              "duration": 890,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/check\n// By default, .check() will check all\n// matching checkbox or radio elements in succession, one after another\ncy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]')\n    .check().should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').not('[disabled]')\n    .check().should('be.checked');\n// .check() accepts a value argument\ncy.get('.action-radios [type=\"radio\"]')\n    .check('radio1').should('be.checked');\n// .check() accepts an array of values\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]')\n    .check(['checkbox1', 'checkbox2']).should('be.checked');\n// Ignore error checking prior to checking\ncy.get('.action-checkboxes [disabled]')\n    .check({ force: true }).should('be.checked');\ncy.get('.action-radios [type=\"radio\"]')\n    .check('radio3', { force: true }).should('be.checked');",
              "err": {},
              "uuid": "1c871284-5aef-4b78-9532-ff5f02c90634",
              "parentUUID": "76bcb551-9a08-4370-9ecf-23f1c318ada5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".uncheck() - uncheck a checkbox element",
              "fullTitle": "Actions .uncheck() - uncheck a checkbox element",
              "timedOut": null,
              "duration": 963,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/uncheck\n// By default, .uncheck() will uncheck all matching\n// checkbox elements in succession, one after another\ncy.get('.action-check [type=\"checkbox\"]')\n    .not('[disabled]')\n    .uncheck().should('not.be.checked');\n// .uncheck() accepts a value argument\ncy.get('.action-check [type=\"checkbox\"]')\n    .check('checkbox1')\n    .uncheck('checkbox1').should('not.be.checked');\n// .uncheck() accepts an array of values\ncy.get('.action-check [type=\"checkbox\"]')\n    .check(['checkbox1', 'checkbox3'])\n    .uncheck(['checkbox1', 'checkbox3']).should('not.be.checked');\n// Ignore error checking prior to unchecking\ncy.get('.action-check [disabled]')\n    .uncheck({ force: true }).should('not.be.checked');",
              "err": {},
              "uuid": "a79a8032-71ae-4a28-b604-c9c4481459ad",
              "parentUUID": "76bcb551-9a08-4370-9ecf-23f1c318ada5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".select() - select an option in a <select> element",
              "fullTitle": "Actions .select() - select an option in a <select> element",
              "timedOut": null,
              "duration": 949,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/select\n// at first, no option should be selected\ncy.get('.action-select')\n    .should('have.value', '--Select a fruit--');\n// Select option(s) with matching text content\ncy.get('.action-select').select('apples');\n// confirm the apples were selected\n// note that each value starts with \"fr-\" in our HTML\ncy.get('.action-select').should('have.value', 'fr-apples');\ncy.get('.action-select-multiple')\n    .select(['apples', 'oranges', 'bananas'])\n    // when getting multiple values, invoke \"val\" method first\n    .invoke('val')\n    .should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']);\n// Select option(s) with matching value\ncy.get('.action-select').select('fr-bananas')\n    // can attach an assertion right away to the element\n    .should('have.value', 'fr-bananas');\ncy.get('.action-select-multiple')\n    .select(['fr-apples', 'fr-oranges', 'fr-bananas'])\n    .invoke('val')\n    .should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']);\n// assert the selected values include oranges\ncy.get('.action-select-multiple')\n    .invoke('val').should('include', 'fr-oranges');",
              "err": {},
              "uuid": "28e36e51-518e-406b-b870-386d2ed69f50",
              "parentUUID": "76bcb551-9a08-4370-9ecf-23f1c318ada5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".scrollIntoView() - scroll an element into view",
              "fullTitle": "Actions .scrollIntoView() - scroll an element into view",
              "timedOut": null,
              "duration": 273,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollintoview\n// normally all of these buttons are hidden,\n// because they're not within\n// the viewable area of their parent\n// (we need to scroll to see them)\ncy.get('#scroll-horizontal button')\n    .should('not.be.visible');\n// scroll the button into view, as if the user had scrolled\ncy.get('#scroll-horizontal button').scrollIntoView()\n    .should('be.visible');\ncy.get('#scroll-vertical button')\n    .should('not.be.visible');\n// Cypress handles the scroll direction needed\ncy.get('#scroll-vertical button').scrollIntoView()\n    .should('be.visible');\ncy.get('#scroll-both button')\n    .should('not.be.visible');\n// Cypress knows to scroll to the right and down\ncy.get('#scroll-both button').scrollIntoView()\n    .should('be.visible');",
              "err": {},
              "uuid": "93bb9531-a67a-43fd-894f-6a1a66eda211",
              "parentUUID": "76bcb551-9a08-4370-9ecf-23f1c318ada5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".trigger() - trigger an event on a DOM element",
              "fullTitle": "Actions .trigger() - trigger an event on a DOM element",
              "timedOut": null,
              "duration": 208,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/trigger\n// To interact with a range input (slider)\n// we need to set its value & trigger the\n// event to signal it changed\n// Here, we invoke jQuery's val() method to set\n// the value and trigger the 'change' event\ncy.get('.trigger-input-range')\n    .invoke('val', 25)\n    .trigger('change')\n    .get('input[type=range]').siblings('p')\n    .should('have.text', '25');",
              "err": {},
              "uuid": "60c71d1d-aba8-4110-a149-db87ef64589a",
              "parentUUID": "76bcb551-9a08-4370-9ecf-23f1c318ada5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.scrollTo() - scroll the window or element to a position",
              "fullTitle": "Actions cy.scrollTo() - scroll the window or element to a position",
              "timedOut": null,
              "duration": 2266,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollto\n// You can scroll to 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// if you chain .scrollTo() off of cy, we will\n// scroll the entire window\ncy.scrollTo('bottom');\ncy.get('#scrollable-horizontal').scrollTo('right');\n// or you can scroll to a specific coordinate:\n// (x axis, y axis) in pixels\ncy.get('#scrollable-vertical').scrollTo(250, 250);\n// or you can scroll to a specific percentage\n// of the (width, height) of the element\ncy.get('#scrollable-both').scrollTo('75%', '25%');\n// control the easing of the scroll (default is 'swing')\ncy.get('#scrollable-vertical').scrollTo('center', { easing: 'linear' });\n// control the duration of the scroll (in ms)\ncy.get('#scrollable-both').scrollTo('center', { duration: 2000 });",
              "err": {},
              "uuid": "88655f7b-ca23-4fb3-9b44-4d6a00261f6b",
              "parentUUID": "76bcb551-9a08-4370-9ecf-23f1c318ada5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e7d447ad-6e06-4789-af97-fbfb85c3185c",
            "5fbbffe5-f381-4fbf-a941-e8de2bb60dbe",
            "c5dee2db-2d76-43d8-a6ef-950c74ba196a",
            "6eff6e4b-8777-4d29-8053-7c1276d61915",
            "49c86799-6d64-4d45-a5e1-f335a61e9719",
            "5bbae325-5c67-4d02-8b03-b627cf2ab24a",
            "aa365a89-3b15-47c7-b90c-fc2f57958ece",
            "0cee217a-38da-40c5-b15d-c37bb49e31cf",
            "1c871284-5aef-4b78-9532-ff5f02c90634",
            "a79a8032-71ae-4a28-b604-c9c4481459ad",
            "28e36e51-518e-406b-b870-386d2ed69f50",
            "93bb9531-a67a-43fd-894f-6a1a66eda211",
            "60c71d1d-aba8-4110-a149-db87ef64589a",
            "88655f7b-ca23-4fb3-9b44-4d6a00261f6b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14394,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}